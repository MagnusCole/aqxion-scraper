[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "aqxion-scraper"
version = "1.0.0"
description = "Intelligent web scraper for business opportunities in Peru"
authors = [
    {name = "Aqxion Team", email = "team@aqxion.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: Indexing/Search",
    "Topic :: Scientific/Engineering :: Information Analysis",
]
dependencies = [
    # Core scraping and parsing
    "scrapling>=1.0.0",
    "selectolax>=0.3.0",
    "requests>=2.31.0",
    "aiohttp>=3.9.0",
    "beautifulsoup4>=4.12.0",

    # Async and concurrency
    "asyncio-mqtt>=0.13.0",
    "aiofiles>=23.0.0",

    # Data processing and analysis
    "pandas>=2.1.0",
    "numpy>=1.24.0",

    # Configuration and environment
    "python-dotenv>=1.0.0",
    "pyyaml>=6.0.0",

    # Text processing
    "slugify>=0.0.1",
    "regex>=2023.0.0",
    "nltk>=3.8.0",

    # Web framework for dashboard
    "streamlit>=1.28.0",
    "plotly>=5.17.0",

    # Utilities
    "pytz>=2023.0.0",
    "python-dateutil>=2.8.0",
    "tqdm>=4.66.0",
]

[project.optional-dependencies]
ml = [
    "transformers>=4.35.0",
    "torch>=2.1.0",
    "sentence-transformers>=2.2.0",
    "scikit-learn>=1.3.0",
]
cache = [
    "redis>=5.0.0",
    "cachetools>=5.3.0",
    "aiocache>=0.12.0",
]
queue = [
    "celery>=5.3.0",
    "kombu>=5.3.0",
]
monitoring = [
    "prometheus-client>=0.19.0",
    "structlog>=23.0.0",
]
resilience = [
    "circuitbreaker>=2.0.0",
    "tenacity>=8.2.0",
]
database = [
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
]
integrations = [
    "google-api-python-client>=2.105.0",
    "google-auth>=2.23.0",
    "telegram-send>=0.25",
]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.12.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.6.0",
]
all = [
    "aqxion-scraper[ml,cache,queue,monitoring,resilience,database,integrations,dev]",
]

[project.scripts]
aqxion-scraper = "main:main"
aqxion-dashboard = "dashboard_web:main"
aqxion-kpi = "kpi:main"

[project.urls]
Homepage = "https://github.com/MagnusCole/aqxion-scraper"
Repository = "https://github.com/MagnusCole/aqxion-scraper.git"
Issues = "https://github.com/MagnusCole/aqxion-scraper/issues"

[tool.setuptools]
packages = ["."]

[tool.setuptools.package-data]
aqxion = ["*.yaml", "*.yml", "*.json"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "scrapling.*",
    "selectolax.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--disable-warnings",
    "--tb=short",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow running tests",
    "asyncio: Async tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["."]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/.venv/*",
    "*/__pycache__/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]</content>
<parameter name="filePath">d:\Projects\aqxion-scraper-mvp\pyproject.toml
